import { InjectionKey } from 'vue';
import { AppBaseService } from '../service/app-base.service';
import { AuthService } from '../service/auth.service';
import { EventBusService } from '../service/event-bus.service';
import { EventService } from '../service/event.service';
import { InvokeService } from '../service/invoke.service';
import { NavigationService } from '../service/navigation.service';
import { IRouteService } from '../service/route.service';
import { SharedDataService } from '../service/shared-data.service';
import { StatusService } from '../service/status.service';
import { StorageService } from '../service/storage.service';
import { TimerService } from '../service/timer.service';
import { ViewService } from '../service/view.service';
import { IVueConfig } from '../vue-config';
import { I18NMessages } from '../vue-messages';
import { ILogger } from '../use/use-logger';
export declare function getConfigToken<C extends IVueConfig>(): InjectionKey<C>;
export declare function useConfig<C extends IVueConfig>(): C;
export declare function getI18NMessagesToken<M extends I18NMessages>(): InjectionKey<M>;
export declare function useI18NMessages<M extends I18NMessages>(): M;
export declare function getTimerServiceToken<S extends TimerService>(): InjectionKey<S>;
export declare function useTimerService<S extends TimerService>(): S;
export declare function getSharedDataServiceToken<S extends SharedDataService>(): InjectionKey<S>;
export declare function useSharedDataService<S extends SharedDataService>(): S;
export declare function getRouteServiceToken<S extends IRouteService>(): InjectionKey<S>;
export declare function useRouteService<S extends IRouteService>(): S;
export declare function getNavigationServiceToken<S extends NavigationService>(): InjectionKey<S>;
export declare function useNavigationService<S extends NavigationService>(): S;
export declare function getEventServiceToken<S extends EventService>(): InjectionKey<S>;
export declare function useEventService<S extends EventService>(): S;
export declare function getEventBusServiceToken<S extends EventBusService>(): InjectionKey<S>;
export declare function useEventBusService<S extends EventBusService>(): S;
export declare function getInvokeServiceToken<S extends InvokeService>(): InjectionKey<S>;
export declare function useInvokeService<S extends InvokeService>(): S;
export declare function getStatusServiceToken<S extends StatusService>(): InjectionKey<S>;
export declare function useStatusService<S extends StatusService>(): S;
export declare function getViewServiceToken<S extends ViewService>(): InjectionKey<S>;
export declare function useViewService<S extends ViewService>(): S;
export declare function getStorageServiceToken<S extends StorageService>(): InjectionKey<S>;
export declare function useStorageService<S extends StorageService>(): S;
export declare function getAuthServiceToken<S extends AuthService>(): InjectionKey<S>;
export declare function useAuthService<S extends AuthService>(): S;
export declare function getAppServiceToken<S extends AppBaseService>(): InjectionKey<S>;
export declare function useAppService<S extends AppBaseService>(): S;
export declare function getLoggerServiceToken<S extends ILogger>(): InjectionKey<S>;
export declare function useLoggerService<S extends ILogger>(): S;
